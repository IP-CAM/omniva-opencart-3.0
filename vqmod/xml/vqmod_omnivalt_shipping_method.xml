<?xml version="1.0" encoding="UTF-8"?>
<modification>
    <id>Catalog checkout variables for map</id>
    <version>1.0.0</version>
    <vqmver required="true">2.5.0</vqmver>
    <author></author>
    <file path="catalog/view/theme/*/template/checkout/shipping_method.twig" error="log">
    <operation>
        <search><![CDATA[{% for shipping_method in shipping_methods %}]]></search>
        <add position="replace"><![CDATA[{% for method_key, shipping_method in shipping_methods %}]]></add>
    </operation>
    <operation>
        <search><![CDATA[<p><strong>{{ shipping_method.title }}</strong></p>]]></search>
        <add position="before"><![CDATA[
        {% if method_key == "omnivalt" %}
        <script>
        var omniva_current_country = '{{omniva_country}}';
        var omnivaTerminals = {{ omniva_terminals|json_encode() }};
        </script>
        <script>
        $(document).ready(function () {
      var omnivaModuleReady = false;
      $(document).on('click', 'input[type="radio"][name="shipping_method"]', function (e) {
        if ($(this).val() === 'fake.parcel_terminal' && !omnivaModuleReady) {
            omnivaModuleReady = $(this).omniva({
                terminals: omnivaTerminals,
                country_code: omniva_current_country,
                path_to_img: 'image/omniva/',
                callback: function (id) {
                  omnivaModuleReady.val('omnivalt.parcel_terminal_' + id);
                },
                translate: omniva_map_translation
            });
            omnivaModuleReady.trigger('omniva.show');

            // with default template this should be enough even if user changes postcode (as he needs to press continue button)
            var sameShipping = $('input[name="shipping_address"]');
            if (sameShipping.length > 0 && sameShipping.is(':checked')) {
                omnivaModuleReady.trigger('omniva.postcode', [$('#input-payment-postcode').val()]);
            } else {
                omnivaModuleReady.trigger('omniva.postcode', [$('#input-shipping-postcode').val()]);
            }
        } else {
            if (omnivaModuleReady) {
              if ($(this).is(omnivaModuleReady)) {
                  omnivaModuleReady.trigger('omniva.show');
              } else {
                  omnivaModuleReady.trigger('omniva.hide');
              }
            }
        }
      });
    });
    </script>
    {% endif %}
        ]]></add>
    </operation>
    <operation>
        <search><![CDATA[{% for quote in shipping_method.quote %}]]></search>
        <add position="replace"><![CDATA[
        {% for quote in shipping_method.quote if not (quote.code starts with 'omnivalt.parcel') %}
        ]]></add>
    </operation>
  </file>
  <file path="catalog/controller/checkout/shipping_method.php" error="log">
    <operation>
        <search><![CDATA[$this->response->setOutput($this->load->view('checkout/shipping_method', $data));]]></search>
        <add position="before"><![CDATA[
        $data['omniva_terminals'] = $this->getOmnivaTerminalForMap();
		    $data['omniva_country'] = $this->getOmnivaCountryForMap();
        ]]></add>
    </operation>
    <operation>
        <search><![CDATA[public function save() {]]></search>
        <add position="before"><![CDATA[
          private function getOmnivaCountryForMap($country = "LT")
          {
            if (isset($this->session->data['shipping_address']['iso_code_2']))
							return $this->session->data['shipping_address']['iso_code_2'];
						return $country;
          }
          private function getOmnivaTerminalForMap($selected = '', $country = "LT")
          {
            $country = $this->getOmnivaCountryForMap($country);
            $terminals_json_file_dir = DIR_DOWNLOAD."/locations.json";
            $terminals_file = fopen($terminals_json_file_dir, "r");
            $terminals = fread($terminals_file,filesize($terminals_json_file_dir)+10);
            fclose($terminals_file);
            $terminals = json_decode($terminals,true);
            $parcel_terminals = '';
        
            if (is_array($terminals)){
              $terminalsList = array();
              foreach ($terminals as $terminal){
              if ($terminal['A0_NAME'] != $country && in_array($country,array("LT","EE","LV")) || intval($terminal['TYPE']) == 1)
                continue;
      
              if (!isset($grouped_options[$terminal['A1_NAME']]))
                $grouped_options[(string)$terminal['A1_NAME']] = array();
              $grouped_options[(string)$terminal['A1_NAME']][(string)$terminal['ZIP']] = $terminal['NAME'];
              
              $terminalsList[] = [$terminal['NAME'], $terminal['Y_COORDINATE'], $terminal['X_COORDINATE'], $terminal['ZIP'], $terminal['A1_NAME'], $terminal['A2_NAME'], $terminal['comment_lit']];
              }
            }
            return $terminalsList;
          }
        ]]></add>
    </operation>
  </file>
</modification>